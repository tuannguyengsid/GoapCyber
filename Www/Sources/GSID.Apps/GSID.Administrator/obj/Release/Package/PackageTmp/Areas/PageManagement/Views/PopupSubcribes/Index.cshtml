@using MvcSiteMapProvider.Web.Html;
@using GSID.Model.MongodbModels;
@using GSID.Admin.Helpers;
@using GSID.Admin.Areas.PageManagement.ViewModels;
@using GSID.Model.ExtraEntities;
@using GSID.Setting;
@model PopupSubcribesViewModel
@Html.MvcSiteMap().SiteMapPath("MyBreadscrum")
@{
    var SiteInformation = GSID.Admin.Controllers.BaseController.GSIDSessionSiteInformation;
    string httpStatic = SiteInformation != null ? SiteInformation.UrlAddressSiteMultimedia : "";
}

<div class="container-fluid">
    @using (Html.BeginForm("EditPage", Request.RequestContext.RouteData.Values["controller"].ToString(), new { area = "PageManagement" }, FormMethod.Post, new { @class = "form-horizontal row-border tabular-form EditHomePage", enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default alt" data-widget='{"id" : "wiget1"}'>
                    <div class="panel-heading">
                        <div class="panel-ctrls"
                             data-actions-container=""
                             data-action-collapse='{"target": ".panel-body"}'
                             data-action-refresh=''
                             data-action-close=''>
                        </div>
                        <h2>@Html.MvcSiteMap().SiteMapTitle()</h2>
                    </div>
                    <div class="panel-editbox" data-widget-controls=""></div>
                    <div class="panel-body">
                        <div class="col-12">
                            <div class="tab-container tab-default">
                                <ul class="nav nav-tabs">
                                    <li class="active"><a href="#buildform" data-toggle="tab">Thiết lập Popup</a></li>
                                    @*<li><a href="#cookiewarning" data-toggle="tab">Thiết lập nội dung cảnh báo cookie</a></li>*@
                                </ul>
                                <div class="tab-content">
                                    <div class="tab-pane active" id="buildform">
                                        <div class="row row-flex">
                                            <div class="col-sm-12">
                                                <div class="tab-container tab-default">
                                                    <ul class="nav nav-tabs">
                                                        <li class="active"><a href="#tbSectionCoreValueTitleVn" data-toggle="tab"><img class="flag-language" src="/Content/Control/assets/flags/vn.svg"> Tiếng Việt</a></li>
                                                        <li><a href="#tbSectionCoreValueTitleEn" data-toggle="tab"><img class="flag-language" src="/Content/Control/assets/flags/en.svg"> Tiếng Anh</a></li>
                                                    </ul>
                                                    <div class="tab-content">
                                                        <div class="tab-pane active" id="tbSectionCoreValueTitleVn">
                                                            <div class="row row-flex">
                                                                <div class="col-sm-6">
                                                                    <div class="fileinputcrop">
                                                                        <div class="fileinputcrop-preview" style="height: 530px;" data-elbinding="#BackgroundVnSrc" data-preview-el="#imgBackgroundVnSrc" data-note="Kích thước hình ảnh:  350px x 530px.">
                                                                            <img class="rounded max-width" id="imgBackgroundVnSrc" src="@StringExtension.ImageOrDefault(Model.BackgroundVnSrc, "", httpStatic)" alt="Preview" style="width:unset;">
                                                                            <div class="img-inner-text">
                                                                                <div class="shff">
                                                                                    <span class="icon ion-image"></span>
                                                                                    <p>Click để thêm ảnh</p>
                                                                                </div>
                                                                            </div>
                                                                            @Html.HiddenFor(m => m.BackgroundVnSrc)
                                                                        </div>
                                                                        <br />
                                                                        <small>Kích thước hình ảnh:  350px x 530px.</small>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <div class="form-group">
                                                                        <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.NameVn)</label>
                                                                        <div class="col-sm-9">
                                                                            @Html.TextBoxFor(model => model.NameVn, new { @class = "form-control", @placeholder = "Tiêu đề" })
                                                                            @Html.ValidationMessageFor(model => model.NameVn)
                                                                        </div>
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.DescriptionVn)</label>
                                                                        <div class="col-sm-9">
                                                                            @Html.TextAreaFor(model => model.DescriptionVn, new { @class = "form-control", @placeholder = "" })
                                                                            @Html.ValidationMessageFor(model => model.DescriptionVn)
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="tab-pane" id="tbSectionCoreValueTitleEn">
                                                            <div class="row row-flex">
                                                                <div class="col-sm-6">
                                                                    <div class="fileinputcrop">
                                                                        <div class="fileinputcrop-preview" style="height: 530px;" data-elbinding="#BackgroundEnSrc" data-preview-el="#imgBackgroundEnSrc" data-note="Kích thước hình ảnh:  350px x 530px.">
                                                                            <img class="rounded max-width" id="imgBackgroundEnSrc" src="@StringExtension.ImageOrDefault(Model.BackgroundEnSrc, "", httpStatic)" alt="Preview" style="width:unset;">
                                                                            <div class="img-inner-text">
                                                                                <div class="shff">
                                                                                    <span class="icon ion-image"></span>
                                                                                    <p>Click để thêm ảnh</p>
                                                                                </div>
                                                                            </div>
                                                                            @Html.HiddenFor(m => m.BackgroundEnSrc)
                                                                        </div>
                                                                        <br />
                                                                        <small>Kích thước hình ảnh:  350px x 530px.</small>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <div class="form-group">
                                                                        <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.NameEn)</label>
                                                                        <div class="col-sm-9">
                                                                            @Html.TextBoxFor(model => model.NameEn, new { @class = "form-control", @placeholder = "Tiêu đề" })
                                                                            @Html.ValidationMessageFor(model => model.NameEn)
                                                                        </div>
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.DescriptionEn)</label>
                                                                        <div class="col-sm-9">
                                                                            @Html.TextAreaFor(model => model.DescriptionEn, new { @class = "form-control", @placeholder = "" })
                                                                            @Html.ValidationMessageFor(model => model.DescriptionEn)
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=" col-sm-offset-6 col-sm-6">

                                                    <div class="form-group">
                                                        <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.IsActive)</label>
                                                        <div class="col-sm-4">
                                                            @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>() {
                                                                    new SelectListItem() { Value = "True", Text = "Kích hoạt" },
                                                                    new SelectListItem() { Value = "False", Text = "Ngưng kích hoạt" }
                                                                }, "--- Chọn ---", new { @class = "form-control select2 select-placeholder" })
                                                            @Html.ValidationMessageFor(model => model.IsActive)
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel-footer">
                        <div class="row">
                            <div class="col-sm-9 col-sm-offset-2">
                                @Html.Button("<i class='fa fa-save'></i> Lưu", new { @class = "btn btn-primary", type = "submit" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <!-- .container-fluid -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">

    $(function () {
        "use strict";

        menuActive('.user-interface');
        $('.fileinputcrop-preview').fmGSIDModal({
            url: '@Default.FileManagementConectDefault', // connector URL (REQUIRED)
            titleModal: 'Ảnh ',
            urlstatic: '@GSID.Admin.Controllers.BaseController.GSIDSessionSiteInformation.UrlAddressSiteMultimedia',
            multiple: false,
            folders: false,
        });

        $('form.EditHomePage').ajaxForm({
            delegation: true,
            beforeSerialize: function (form, opts) {
                $('#MenuActiveId').val($("input[name='menuactives']:checked").val());
            },
            beforeSubmit: function (arr, form, options) {
                var validator = form.validate(); // obtain validator
                var anyError = false;
                try {
                    form.find("input,select").each(function () {
                        if (!validator.element(this)) { // validate every input element inside this step
                            anyError = true;
                        }
                    });
                } catch (e) {
                }
                $('.tab-container .nav-tabs > li').each(function (index, value) {
                    var $tab = $(this);
                    var elName = $tab.find('a').attr('href');
                    var _hasValid = $(elName).find('.input-validation-error');
                    if (_hasValid.length > 0) {
                        $tab.addClass('input-validation-error');
                    }
                    else {
                        $tab.removeClass('input-validation-error');
                    }
                });
                if (anyError) {
                    return false; // exit if any error found
                }
                else {
                    swal({
                        title: "Đang xử lý dữ liệu",
                        html: true,
                        showConfirmButton: false
                    });
                }
            },
            success: function (data, statusText) {
                if (data.Status == '2') {
                    swal({
                        title: data.Title,
                        text: data.Message,
                        type: "success"
                    }, function () {
                    });
                }
                else {
                    swal(
                        data.Title,
                        data.Message,
                        'error'
                    )
                }
            },
            complete: function (xhr) {
                //status.html(xhr.responseText);
            },
            error: function () {
                swal(
                    'Tạo dữ liệu không thành công',
                    'Hệ thống bị gián đoạn internet hoặc mất kết nối đến máy chủ :)',
                    'error'
                )
            }
        });
    });
</script>
