@using MvcSiteMapProvider.Web.Html;
@using GSID.Model.MongodbModels;
@using GSID.Model.ExtraEntities;
@using GSID.Admin.Helpers;
@using GSID.Admin.ViewModels.MongoModels;
@model List<Image>
@{
    var SiteInformation = GSID.Admin.Controllers.BaseController.GSIDSessionSiteInformation;
    string httpStatic = SiteInformation != null ? SiteInformation.UrlAddressSiteMultimedia : "";

    var TotalPage = (int)ViewBag.TotalPage;
    var PageVisit = (int)ViewBag.PageVisit;
    var PageSize = (int)ViewBag.PageSize;
    var CurrentPage = (int)ViewBag.CurrentPage;
    var CountTotal = (int)ViewBag.CountTotal;
    var SecondRecord = CountTotal > 0 ? ((CurrentPage * PageSize) <= CountTotal ? (CurrentPage * PageSize) : CountTotal) : 0;
    var FirstRecord = CountTotal > 0 ? (CurrentPage == 1 ? 1 : ((CurrentPage > 1 && CurrentPage <= TotalPage) ? (((CurrentPage - 1) * PageSize) + 1) : CountTotal)) : 0;
}
@Html.MvcSiteMap().SiteMapPath("MyBreadscrum")

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default alt" data-widget='{"id" : "wiget1"}'>
                <div class="panel-heading">
                    <div class="panel-ctrls"
                         data-actions-container=""
                         data-action-collapse='{"target": ".panel-body"}'
                         data-action-refresh=''
                         data-action-close=''>
                    </div>
                    <h2>@Html.MvcSiteMap().SiteMapTitle()</h2>
                </div>
                <div class="panel-editbox" data-widget-controls=""></div>
                <div class="panel-body">
                    <div class="panel-ctrls">
                        <div class="pull-left">
                            <div class="btn-group">
                                @Html.RawActionLinkIfRole("<i class='ion-plus'></i><span> Tạo mới</span>", "Create", Request.RequestContext.RouteData.Values["controller"].ToString(), null, new { @class = "btn btn-default btn-sm", data_step = "1", data_intro = "Tạo mới", data_position = "top" })
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>

                    <div class="table-flipscroll" data-step="2" data-intro="Danh sách" data-position='top'>
                        <table class="table table-bordered hoverTable tablesaw table-striped table-language" data-tablesaw-mode="columntoggle" data-tablesaw-minimap>
                            <thead>
                                <tr>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="persist">#</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Thư viện hình ảnh</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Ngày tạo</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Ngày sửa</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    string editUrl = Url.Action("Update", Request.RequestContext.RouteData.Values["controller"].ToString(), new { gsid = item.Id.ToString() });
                                    string addDate = item.AddedByDate.HasValue ? item.AddedByDate.Value.ToString("hh:mm:ss tt dd/MM/yyyy") : "";
                                    string addBy = item.AddBy != null ? string.Format("{0} {1}", item.AddBy.FirstName, item.AddBy.LastName) : "";
                                    string editDate = item.EditedByDate.HasValue ? item.EditedByDate.Value.ToString("hh:mm:ss tt dd/MM/yyyy") : "";
                                    string editBy = item.EditBy != null ? string.Format("{0} {1}", item.EditBy.FirstName, item.EditBy.LastName) : "";

                                    var _hasAttrCheckbox = new Dictionary<string, object>{
                                                                        { "class", "bootstrap-switch status_trash"},
                                                                        {"data-size", "mini"},
                                                                        {"data-on-text", "<i class='fa fa-check'></i>"},
                                                                        {"data-on-color", "success"},
                                                                        {"data-off-text", "<i class='fa fa-times'></i>"},
                                                                        {"data-off-color", "danger"},
                                                                        {"data-val", item.Id}
                                                                    };
                                    if (!RBACUser.HasPermission("RecycleBin", Request.RequestContext.RouteData.Values["controller"].ToString()))
                                    {
                                        _hasAttrCheckbox.Add("disabled", "disabled");
                                    }
                                    <tr class="gradeX">
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.ImageSrc))
                                            {
                                                <div class="air__utils__avatarGroup">
                                                    <div class="air__utils__avatar air__utils__avatar--size64">
                                                        <a href="@editUrl"><img src="@string.Format("{0}/{1}", httpStatic, item.ImageSrc)" /></a>
                                                    </div>
                                                </div>
                                            }
                                        </td>
                                        <td>
                                            @if (item != null && item.ImageLibraries != null)
                                            {
                                                foreach (var x in item.ImageLibraries)
                                                {
                                                    <span class="label label-info">@x.NameVn</span>
                                                }
                                            }
                                        </td>
                                        <td>
                                            <i class="ion-plus"></i>: <b>@addDate</b>
                                            <br />
                                            <i class="ion-ios-body"></i>: <b>@addBy</b>
                                        </td>
                                        <td>
                                            <i class="ion-android-create"></i>: <b>@editDate</b>
                                            <br />
                                            <i class="ion-ios-body"></i>: <b>@editBy</b>
                                        </td>
                                        <td>
                                            @Html.CheckBox(string.Format("Item_trash_{0}", item.Id), !item.IsDeleted, _hasAttrCheckbox)
                                            <div class="pull-right">
                                                <div class="btn-group">
                                                    @Html.RawActionLinkIfRole("<i class='ion-android-create'></i>", "Update", Request.RequestContext.RouteData.Values["controller"].ToString(), new { gsid = item.Id.ToString() }, new { @class = "btn btn-success btn-xs", id = item.Id.ToString() })
                                                    @Html.RawActionLink("<i class='ion-android-close'></i>", null, null, new { id = "dele_" + item.Id.ToString() }, new { @class = "btn btn-danger btn-xs", onclick = "onDelete('" + item.Id.ToString() + "');", href = "javascript:;" }).IfRole("Delete", Request.RequestContext.RouteData.Values["controller"].ToString())
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="dataTables_info" role="status" aria-live="polite" data-step="3" data-intro="Thông tin số dữ liệu" data-position='top'>
                                    @string.Format("Hiển thị {0} đến {1} của {2} dữ liệu", FirstRecord.ToString(), SecondRecord.ToString(), CountTotal.ToString())
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="dataTables_paginate paging_bootstrap" data-step="4" data-intro="Chuyển trang" data-position='top'>
                                    <ul id="pagination" class="pagination-sm pull-right m0"></ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- .container-fluid -->
</div>

@Html.Hidden("TotalPage", (string)TotalPage.ToString())
@Html.Hidden("PageVisit", (string)PageVisit.ToString())
@Html.Hidden("CurrentPage", (string)CurrentPage.ToString())

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@{
    if (RBACUser.HasPermission("RecycleBin", Request.RequestContext.RouteData.Values["controller"].ToString()))
    {
        <script type="text/javascript">
            $(function () {
                "use strict";

                $('input.status_trash').on('switchChange.bootstrapSwitch', function (e, data) {
                    //delete
                    var bootstrapSwitch = $(this);
                    var id = bootstrapSwitch.attr('data-val');
                    if (data == false) {
                        swal({
                            title: 'Bạn đã chắc chứ?',
                            text: "Bạn có chắc muốn ẩn dữ liệu này không",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonClass: "btn-danger",
                            confirmButtonText: "Ẩn đi",
                            cancelButtonText: "Đóng",
                            closeOnConfirm: false,
                            closeOnCancel: false
                        },
                            function (isConfirm) {
                                if (isConfirm) {
                                    swal({
                                        title: "Đang xử lý dữ liệu",
                                        html: true,
                                        showConfirmButton: false
                                    });
                                    $.ajax({
                                        url: '@Url.Action("RecycleBin", Request.RequestContext.RouteData.Values["controller"].ToString())',
                                        type: 'POST',
                                        data: { id: id, isDeleted: data },
                                        dataType: 'json',
                                        success: function (result) {
                                            if (result.Status == '2')
                                                swal.close();
                                            else {
                                                bootstrapSwitch.bootstrapSwitch('state', !data, true);
                                                swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                                            }
                                        },
                                        error: function () {
                                            bootstrapSwitch.bootstrapSwitch('state', !data, true);
                                            swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                                        }
                                    });
                                } else {
                                    bootstrapSwitch.bootstrapSwitch('state', !data, true);
                                    swal.close();
                                }
                            });
                    }
                    else {
                        swal({
                            title: "Đang xử lý dữ liệu",
                            html: true,
                            showConfirmButton: false
                        });
                        $.ajax({
                            url: '@Url.Action("RecycleBin", Request.RequestContext.RouteData.Values["controller"].ToString())',
                            type: 'POST',
                            data: { id: id, isDeleted: data },
                            dataType: 'json',
                            success: function (result) {
                                if (result.Status == '2')
                                    swal.close();
                                else
                                    swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                            },
                            error: function () {
                                swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                            }
                        });
                    }
                });
            })
        </script>
    }
}

@{
    if (RBACUser.HasPermission("Delete", Request.RequestContext.RouteData.Values["controller"].ToString()))
    {
        <script type="text/javascript">
            function onDelete(val) {
                if (val.length > 0) {
                    swal({
                        title: 'Bạn đã chắc chứ?',
                        text: "Bạn có chắc muốn xóa dữ liệu này không",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-danger",
                        confirmButtonText: "Xóa",
                        cancelButtonText: "Đóng",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },function (isConfirm) {
                        if (isConfirm) {
                            swal({
                                title: "Đang xử lý dữ liệu",
                                html: true,
                                showConfirmButton: false
                            });
                            $.ajax({
                                url: '@Url.Action("Delete", Request.RequestContext.RouteData.Values["controller"].ToString())',
                                type: 'POST',
                                data: { id: val },
                                dataType: 'json',
                                success: function (result) {
                                    swal.close();
                                    if (result.Status == '2') {
                                        window.location.href = window.location.href;
                                    }
                                    else {
                                        swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                                    }
                                },
                                error: function () {
                                    swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                                }
                            });
                        }
                        else {
                            swal.close();
                        }
                    });
                }
            }
        </script>
    }
}
<script type="text/javascript">
    $(document).ready(function () {
        var totalPage = parseInt($('#TotalPage').val());
        if (totalPage > 0) {
            $('#pagination').twbsPagination({
                totalPages: totalPage,
                visiblePages: parseInt($('#PageVisit').val()),
                startPage: parseInt($('#CurrentPage').val()),
                initiateStartPageClick: false,
                first: 'Trang đầu',
                prev: 'Lùi',
                next: 'Tiếp',
                last: 'Trang cuối',
                onPageClick: function (event, page) {
                    window.location.href = '@Url.Action("Index", Request.RequestContext.RouteData.Values["controller"].ToString())?p=' + page;
                }
            });
        }
    });
    //initializing
    $(function () {
        "use strict";
        //Bootstrap Switch
        $('input.bootstrap-switch').bootstrapSwitch();
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
    //~/Scripts/custom.js
        menuActive('@ViewBag.ActiveMenu');
    });
</script>