@using GSID.Admin.ViewModels.MongoModels;
@using GSID.Admin.Helpers;
@using GSID.Model.ExtraEntities;
@using GSID.Setting;
@model SiteInformationViewModel
@{
    var SiteInformation = (SiteInformationConfig)ViewBag.SiteInformation;
    string httpStatic = SiteInformation != null ? SiteInformation.UrlAddressSiteMultimedia : "";
}

@using (Html.BeginForm("PartialConfigSiteInformation", Request.RequestContext.RouteData.Values["controller"].ToString(), new { Area = "" }, FormMethod.Post, new { @class = "form-horizontal row-border tabular-form ConfigSiteInformation", enctype = "multipart/form-data" }))
{
    <div class="col-12">
        <div class="accordion-group" id="accordionsitename">
            <div class="panel accordion-item">
                <a class="accordion-title" data-toggle="collapse" data-parent="#accordionsitename" href="#collapseasitename" aria-expanded="true"><h2>Logo vs tên trang</h2></a>
                <div id="collapseasitename" class="collapse in" aria-expanded="true">
                    <div class="accordion-body">
                        <div class="row">
                            <div class="col-md-3 mt-e-10">
                                <div class="tab-container tab-default">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a href="#tbprdWhiteLogo" data-toggle="tab">Logo Trắng</a></li>
                                        <li><a href="#tbprdBlackLogo" data-toggle="tab">Logo màu</a></li>
                                        <li><a href="#tbprdIcon" data-toggle="tab">Icon</a></li>
                                    </ul>
                                    <div class="tab-content">
                                        <div class="tab-pane active" id="tbprdWhiteLogo">
                                            <div class="fileinputcrop">
                                                <div class="fileinputcrop-preview" style="height: 44px; background: #f1f1f1;" data-elbinding="#WhiteLogoSrc" data-preview-el="#imgWhiteLogoSrc" data-note="Kích thước hình ảnh: 75px x 19px.">
                                                    <img class="rounded max-width" id="imgWhiteLogoSrc" src="@StringExtension.ImageOrDefault(Model.WhiteLogoSrc, "", httpStatic)" alt="Preview" style="width:unset">
                                                    <div class="img-inner-text">
                                                        <div class="shff">
                                                            <span class="icon ion-image"></span>
                                                            <p>Click để thêm ảnh</p>
                                                        </div>
                                                    </div>
                                                    @Html.HiddenFor(m => m.WhiteLogoSrc)
                                                </div>
                                                <br />
                                                <small>Kích thước hình ảnh: 75px x 19px.</small>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="tbprdBlackLogo">
                                            <div class="fileinputcrop">
                                                <div class="fileinputcrop-preview" style="height: 44px; background: #f1f1f1;" data-elbinding="#BlackLogoSrc" data-preview-el="#imgBlackLogoSrc" data-note="Kích thước hình ảnh: 75px x 19px.">
                                                    <img class="rounded max-width" id="imgBlackLogoSrc" src="@StringExtension.ImageOrDefault(Model.BlackLogoSrc, "", httpStatic)" alt="Preview" style="width:unset">
                                                    <div class="img-inner-text">
                                                        <div class="shff">
                                                            <span class="icon ion-image"></span>
                                                            <p>Click để thêm ảnh</p>
                                                        </div>
                                                    </div>
                                                    @Html.HiddenFor(m => m.BlackLogoSrc)
                                                </div>
                                                <br />
                                                <small>Kích thước hình ảnh: 75px x 19px.</small>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="tbprdIcon">
                                            <div class="fileinputcrop">
                                                <div class="fileinputcrop-preview" style="height: 44px; background: #f1f1f1;" data-elbinding="#IconSrc" data-preview-el="#imgIconSrc" data-note="Kích thước hình ảnh: 32px x 32px. Phần mở rộng " .ico"">
                                                    <img class="rounded max-width" id="imgIconSrc" src="@StringExtension.ImageOrDefault(Model.IconSrc, "", httpStatic)" alt="Preview" style="width:unset">
                                                    <div class="img-inner-text">
                                                        <div class="shff">
                                                            <span class="icon ion-image"></span>
                                                            <p>Click để thêm ảnh</p>
                                                        </div>
                                                    </div>
                                                    @Html.HiddenFor(m => m.IconSrc)
                                                </div>
                                                <br />
                                                <small>Kích thước hình ảnh: 32px x 32px. Phần mở rộng ".ico"</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9 mt-e-10 tabular-border">
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.PathAddressSiteMultimedia)</label>
                                    <div class="col-sm-9 tabular-border">
                                        @Html.TextBoxFor(model => model.PathAddressSiteMultimedia, new { @class = "form-control", @placeholder = @"D:\..." })
                                        <small>Lưu ý: không được có dấu "\" cuối đường dẫn."</small>
                                        @Html.ValidationMessageFor(model => model.PathAddressSiteMultimedia)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.UrlAddressSiteMultimedia)</label>
                                    <div class="col-sm-9 tabular-border">
                                        @Html.TextBoxFor(model => model.UrlAddressSiteMultimedia, new { @class = "form-control", @placeholder = @"http://static.tottosi.com/..." })
                                        <small>Lưu ý: không được có dấu "/" cuối đường dẫn."</small>
                                        <br />
                                        @Html.ValidationMessageFor(model => model.UrlAddressSiteMultimedia)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.UrlBackEndSite)</label>
                                    <div class="col-sm-9 tabular-border">
                                        @Html.TextBoxFor(model => model.UrlBackEndSite, new { @class = "form-control", @placeholder = @"http://backend.msm.com.vn/..." })
                                        @Html.ValidationMessageFor(model => model.UrlBackEndSite)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.UrlAddressSite)</label>
                                    <div class="col-sm-9 tabular-border">
                                        @Html.TextBoxFor(model => model.UrlAddressSite, new { @class = "form-control", @placeholder = @"http://msm.com.vn/..." })
                                        @Html.ValidationMessageFor(model => model.UrlAddressSite)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.Prefix)</label>
                                    <div class="col-sm-9 tabular-border">
                                        @Html.TextBoxFor(model => model.Prefix, new { @class = "form-control", @placeholder = @" - " })
                                        @Html.ValidationMessageFor(model => model.Prefix)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.IsShowAuthenticationPage)</label>
                                    <div class="col-sm-9 tabular-border">
                                        @Html.CheckBoxFor(m => m.IsShowAuthenticationPage, new { @class = "bootstrap-switch", data_size = "mini", data_on_text = "<i class='fa fa-check'></i>", data_on_color = "success", data_off_text = "<i class='fa fa-times'></i>", data_off_color = "danger" })
                                        @Html.ValidationMessageFor(model => model.IsShowAuthenticationPage)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel accordion-item">
                <a class="accordion-title" data-toggle="collapse" data-parent="#accordionsitename" href="#collapseaPage" aria-expanded="true"><h2>Thông tin trang</h2></a>
                <div id="collapseaPage" class="collapse" aria-expanded="true" style="">
                    <div class="accordion-body">
                        <div class="row">
                            <div class="col-md-12 mt-e-10">
                                <div class="tab-container tab-default">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a href="#tbPageVn" data-toggle="tab">Tiếng Việt</a></li>
                                        <li><a href="#tbPageEn" data-toggle="tab">Tiếng Anh</a></li>
                                    </ul>
                                    <div class="tab-content">
                                        <div class="tab-pane active" id="tbPageVn">
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.SiteTitleVn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.SiteTitleVn, new { @class = "form-control", @placeholder = "Tiêu đề trang" })
                                                    @Html.ValidationMessageFor(model => model.SiteTitleVn)
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.CompanyNameVn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.CompanyNameVn, new { @class = "form-control", @placeholder = "Tên công ty" })
                                                    @Html.ValidationMessageFor(model => model.CompanyNameVn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.TaxCode)</label>
                                                <div class="col-sm-4 tabular-border">
                                                    @Html.TextBoxFor(model => model.TaxCode, new { @class = "form-control", @placeholder = "Mã số thuế" })
                                                    @Html.ValidationMessageFor(model => model.TaxCode)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.BusinessLicenseVn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.BusinessLicenseVn, new { @class = "form-control", @placeholder = "Mã giấy phép" })
                                                    @Html.ValidationMessageFor(model => model.BusinessLicenseVn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.HotlineVn)</label>
                                                <div class="col-sm-3 tabular-border">
                                                    @Html.TextBoxFor(model => model.HotlineVn, new { @class = "form-control", @placeholder = "Hotline" })
                                                    @Html.ValidationMessageFor(model => model.HotlineVn)
                                                </div>
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.DisplayHotlineVn)</label>
                                                <div class="col-sm-3 tabular-border">
                                                    @Html.TextBoxFor(model => model.DisplayHotlineVn, new { @class = "form-control", @placeholder = "Hiển thị hotline" })
                                                    @Html.ValidationMessageFor(model => model.DisplayHotlineVn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.EmailVn)</label>
                                                <div class="col-sm-3 tabular-border">
                                                    @Html.TextBoxFor(model => model.EmailVn, new { @class = "form-control", @placeholder = "" })
                                                    @Html.ValidationMessageFor(model => model.EmailVn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.WorkingTimeVn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.WorkingTimeVn, new { @class = "form-control", @placeholder = "" })
                                                    @Html.ValidationMessageFor(model => model.WorkingTimeVn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.AddressVn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.AddressVn, new { @class = "form-control", @placeholder = "" })
                                                    @Html.ValidationMessageFor(model => model.AddressVn)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="tbPageEn">
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.SiteTitleEn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.SiteTitleEn, new { @class = "form-control", @placeholder = "Tiêu đề trang" })
                                                    @Html.ValidationMessageFor(model => model.SiteTitleEn)
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.CompanyNameEn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.CompanyNameEn, new { @class = "form-control", @placeholder = "Tên công ty" })
                                                    @Html.ValidationMessageFor(model => model.CompanyNameEn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.TaxCode)</label>
                                                <div class="col-sm-4 tabular-border">
                                                    @Html.TextBoxFor(model => model.TaxCode, new { @class = "form-control", @placeholder = "Mã số thuế" })
                                                    @Html.ValidationMessageFor(model => model.TaxCode)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.BusinessLicenseEn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.BusinessLicenseEn, new { @class = "form-control", @placeholder = "Mã giấy phép" })
                                                    @Html.ValidationMessageFor(model => model.BusinessLicenseEn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.HotlineEn)</label>
                                                <div class="col-sm-3 tabular-border">
                                                    @Html.TextBoxFor(model => model.HotlineEn, new { @class = "form-control", @placeholder = "Hotline" })
                                                    @Html.ValidationMessageFor(model => model.HotlineEn)
                                                </div>
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.DisplayHotlineEn)</label>
                                                <div class="col-sm-3 tabular-border">
                                                    @Html.TextBoxFor(model => model.DisplayHotlineEn, new { @class = "form-control", @placeholder = "Hiển thị hotline" })
                                                    @Html.ValidationMessageFor(model => model.DisplayHotlineEn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.EmailEn)</label>
                                                <div class="col-sm-3 tabular-border">
                                                    @Html.TextBoxFor(model => model.EmailEn, new { @class = "form-control", @placeholder = "" })
                                                    @Html.ValidationMessageFor(model => model.EmailEn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.WorkingTimeEn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.WorkingTimeEn, new { @class = "form-control", @placeholder = "" })
                                                    @Html.ValidationMessageFor(model => model.WorkingTimeEn)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.AddressEn)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.AddressEn, new { @class = "form-control", @placeholder = "" })
                                                    @Html.ValidationMessageFor(model => model.AddressEn)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel accordion-item">
                <a class="accordion-title" data-toggle="collapse" data-parent="#accordionsitename" href="#collapseaTagHeader" aria-expanded="true"><h2>Header code</h2></a>
                <div id="collapseaTagHeader" class="collapse" aria-expanded="true" style="">
                    <div class="accordion-body">
                        <div class="row">
                            <div class="col-md-12 mt-e-10">
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">@Html.DisplayNameFor(m => m.TagHeader)</label>
                                    <div class="col-sm-10 tabular-border">
                                        @Html.TextAreaFor(model => model.TagHeader, new { @class = "form-control", @placeholder = "" })
                                        @Html.ValidationMessageFor(model => model.TagHeader)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">@Html.DisplayNameFor(m => m.CssHeader)</label>
                                    <div class="col-sm-10 tabular-border">
                                        @Html.TextAreaFor(model => model.CssHeader, new { @class = "form-control", @placeholder = "" })
                                        @Html.ValidationMessageFor(model => model.CssHeader)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">@Html.DisplayNameFor(m => m.ScriptHeader)</label>
                                    <div class="col-sm-10 tabular-border">
                                        @Html.TextAreaFor(model => model.ScriptHeader, new { @class = "form-control", @placeholder = "" })
                                        @Html.ValidationMessageFor(model => model.ScriptHeader)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel accordion-item">
                <a class="accordion-title" data-toggle="collapse" data-parent="#accordionsitename" href="#collapseaTagFooter" aria-expanded="true"><h2>Footer code</h2></a>
                <div id="collapseaTagFooter" class="collapse" aria-expanded="true" style="">
                    <div class="accordion-body">
                        <div class="row">
                            <div class="col-md-12 mt-e-10">
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">@Html.DisplayNameFor(m => m.TagFooter)</label>
                                    <div class="col-sm-10 tabular-border">
                                        @Html.TextAreaFor(model => model.TagFooter, new { @class = "form-control", @placeholder = "" })
                                        @Html.ValidationMessageFor(model => model.TagFooter)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">@Html.DisplayNameFor(m => m.ScriptFooter)</label>
                                    <div class="col-sm-10 tabular-border">
                                        @Html.TextAreaFor(model => model.ScriptFooter, new { @class = "form-control", @placeholder = "" })
                                        @Html.ValidationMessageFor(model => model.ScriptFooter)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-sm waves-effect waves-light btn-danger" data-dismiss="modal"><i class="fa fa-close" aria-hidden="true"></i> Đóng</button>
        @Html.Button("<i class='fa fa-save'></i> Lưu", new { @class = "btn btn-primary", type = "submit" })
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    $(function () {
        "use strict";
        $('.fileinputcrop-preview').fmGSIDModal({
            url: '@Default.FileManagementConectDefault', // connector URL (REQUIRED)
            titleModal: 'Ảnh đại diện',
            urlstatic: '@GSID.Admin.Controllers.BaseController.GSIDSessionSiteInformation.UrlAddressSiteMultimedia',
            multiple: false,
            folders: false
        });
        //Bootstrap Switch
        $('input.bootstrap-switch').bootstrapSwitch();

        $('form.ConfigSiteInformation').ajaxForm({
            delegation: true,
            beforeSerialize: function (form, opts) {
            },
            beforeSubmit: function (arr, form, options) {
                var validator = form.validate(); // obtain validator
                var anyError = false;
                try {
                    form.find("input,select").each(function () {
                        if (!validator.element(this)) { // validate every input element inside this step
                            anyError = true;
                        }
                    });
                } catch (e) {
                }
                if (anyError) {
                    return false; // exit if any error found
                }
                else {
                    swal({
                        title: "Đang xử lý dữ liệu",
                        html: true,
                        showConfirmButton: false
                    });
                }
            },
            success: function (data, statusText) {
                if (data.Status == '2') {
                    swal({
                        title: data.Title,
                        text: data.Message,
                        type: "success"
                    }, function () {
                    });
                }
                else {
                    swal(
                        data.Title,
                        data.Message,
                        'error'
                    )
                }
            },
            complete: function (xhr) {
                //status.html(xhr.responseText);
            },
            error: function () {
                swal(
                    'Tạo dữ liệu không thành công',
                    'Hệ thống bị gián đoạn internet hoặc mất kết nối đến máy chủ :)',
                    'error'
                )
            }
        });
    });
</script>

