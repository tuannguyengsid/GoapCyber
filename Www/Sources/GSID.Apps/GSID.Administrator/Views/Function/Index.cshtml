@using MvcSiteMapProvider.Web.Html;
@using GSID.Model.MongodbModels;
@using GSID.Admin.Helpers;
@model List<Permission>
@Html.MvcSiteMap().SiteMapPath("MyBreadscrum")

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default alt" data-widget='{"id" : "wiget1"}'>
                <div class="panel-heading">
                    <div class="panel-ctrls"
                         data-actions-container=""
                         data-action-collapse='{"target": ".panel-body"}'
                         data-action-refresh=''
                         data-action-close=''>
                    </div>
                    <h2>@Html.MvcSiteMap().SiteMapTitle()</h2>
                </div>
                <div class="panel-editbox" data-widget-controls=""></div>
                <div class="panel-body">
                    <div class="panel-ctrls">
                        <div class="pull-left">
                            <div class="btn-group">
                                @Html.RawActionLink("<i class='ion-plus'></i><span> Tạo mới</span>", "Create", "Function", null, new { @class = "btn btn-default btn-sm" })
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>

                    <div class="table-flipscroll">
                        <table class="table table-bordered hoverTable tablesaw" id="table-parent" data-tablesaw-mode="columntoggle" data-tablesaw-minimap>
                            <thead>
                                <tr>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="persist">Tên</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Url</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Mô tả</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Menu</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Thứ tự ưu tiên</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Ngày tạo</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Ngày sửa</th>
                                    <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    string addDate = item.AddedByDate.HasValue ? item.AddedByDate.Value.ToString("hh:mm:ss tt dd/MM/yyyy") : "";
                                    string addBy = item.AddBy != null ? string.Format("{0} {1}", item.AddBy.FirstName, item.AddBy.LastName) : "";
                                    string editDate = item.EditedByDate.HasValue ? item.EditedByDate.Value.ToString("hh:mm:ss tt dd/MM/yyyy") : "";
                                    string editBy = item.EditBy != null ? string.Format("{0} {1}", item.EditBy.FirstName, item.EditBy.LastName) : "";
                                <tr class="gradeX" data-tt-id="@item.Id.ToString()" data-tt-parent-id="@item.ParentId.ToString()">
                                    <td><span class="icon"><b>@Html.Raw(item.Icon)</b></span><b> @item.Name</b></td>
                                    <td><b>@item.Url</b></td>
                                    <td><b>@item.Description</b></td>
                                    <td>@Html.CheckBox(string.Format("Item_menu_{0}", item.Id), item.IsMenu.Value, new { @class = "bootstrap-switch status_trash", data_size = "mini", data_on_text = "<i class='fa fa-check'></i>", data_on_color = "success", data_off_text = "<i class='fa fa-times'></i>", data_off_color = "warning", data_val = item.Id })</td>
                                    <td><b>@item.Sort</b></td>
                                    <td>
                                        <i class="ion-plus"></i>: <b>@addDate</b>
                                        <br />
                                        <i class="ion-ios-body"></i>: <b>@addBy</b>
                                    </td>
                                    <td>
                                        <i class="ion-android-create"></i>: <b>@editDate</b>
                                        <br />
                                        <i class="ion-ios-body"></i>: <b>@editBy</b>
                                    </td>
                                    <td>
                                        <div class="pull-right">
                                            @Html.CheckBox(string.Format("Item_trash_{0}", item.Id), !item.IsDeleted, new { @class = "bootstrap-switch status_trash", data_size = "mini", data_on_text = "<i class='fa fa-check'></i>", data_on_color = "success", data_off_text = "<i class='fa fa-times'></i>", data_off_color = "danger", data_val = item.Id })
                                            <div class="btn-group">
                                                @Html.RawActionLink("<i class='ion-android-create'></i>", "Update", "Function", new { gsid = item.Id.ToString() }, new { @class = "btn btn-success btn-xs", id = item.Id.ToString() })
                                                @Html.RawActionLink("<i class='ion-android-close'></i>", null, null, null, new { @class = "btn btn-danger btn-xs", href = "javascript:;", id = item.Id.ToString(), onclick = "onDelete('" + item.Id.ToString() + "');" })
                                            </div>
                                        </div>
                                    </td>
                                </tr>

                                    @Html.Action("PartialIndexChildren", "Function", new { ParentId = item.Id })
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="dataTables_info" role="status" aria-live="polite">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- .container-fluid -->
</div>

<script type="text/javascript">
    //initializing
    $(function () {
        "use strict";
	    $("table").agikiTreeTable({persist: true, persistStoreName: "files"});
	    /*
		    loadBranches: true (default: false)
			    To allow autoload branches from outside set true, then
			    you should add to each branch node attribute "data-path", which will be used
			    as url to retrieve table. It is supposed that request returns html with table.
			    And if you use loadBranches you should manually set
			    data-tt-branch to true to each branch node, so that it can be expanded.
		    persist: true (default: false)
			    Allows you to save current state of expanded nodes. You should
			    provide persistStoreName to use it as a key to save this table states.

		    Besides the fact that i defined own callbacks for treetable plugin, i also
		    define a callback wrapper so that you can pass your own callbacks to the agikiTreeTable
		    and they will be called after callback defined in agikiTreeTable.
	    */

        $('.btn-add').click(function () {
            swal({
                title: "Đang xử lý dữ liệu",
                html: true,
                showConfirmButton: false
            });
            $.ajax({
                method: 'GET',
                url: '@Url.Action("PartialCreate", "Function", new { Area = ""})',
                data: { },
                dataType: 'html',
                success: function (data, status) {
                    swal.close();
                    $('#binding-modal').html(data);
                },
                error: function (error) {
                    console.log('Error in sending ajax data');
                }
            });
        });

        //Bootstrap Switch
        $('input.bootstrap-switch').bootstrapSwitch();
        $('input.status_trash').on('switchChange.bootstrapSwitch', function (e, data) {
            //delete
            var bootstrapSwitch = $(this);
            var id = bootstrapSwitch.attr('data-val');
            if (data == false) {
                swal({
                    title: 'Bạn đã chắc chứ?',
                    text: "Bạn có chắc muốn ẩn dữ liệu này không",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Ẩn đi",
                    cancelButtonText: "Hủy",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            swal({
                                title: "Đang xử lý dữ liệu",
                                html: true,
                                showConfirmButton: false
                            });
                            $.ajax({
                                url: '@Url.Action("RecycleBin", "Function")',
                                type: 'POST',
                                data: { id: id, isDeleted: data },
                                dataType: 'json',
                                success: function (result) {
                                    if (result.Status == '2')
                                        swal.close();
                                    else {
                                        bootstrapSwitch.bootstrapSwitch('state', !data, true);
                                        swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                                    }
                                },
                                error: function () {
                                    bootstrapSwitch.bootstrapSwitch('state', !data, true);
                                    swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                                }
                            });
                        } else {
                            bootstrapSwitch.bootstrapSwitch('state', !data, true);
                            swal.close();
                        }
                    });
            }
            else {
                swal({
                    title: "Đang xử lý dữ liệu",
                    html: true,
                    showConfirmButton: false
                });
                $.ajax({
                    url: '@Url.Action("RecycleBin", "Function")',
                    type: 'POST',
                    data: { id: id, isDeleted: data },
                    dataType: 'json',
                    success: function (result) {
                        if (result.Status == '2')
                            swal.close();
                        else
                            swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                    },
                    error: function () {
                        swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                    }
                });
            }
        });
    });

    function onDelete(val) {
        swal({
            title: 'Bạn đã chắc chứ?',
            text: "Bạn có chắc muốn xóa dữ liệu này không",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Xóa đi",
            cancelButtonText: "Hủy",
            closeOnConfirm: false,
            closeOnCancel: false
        },
        function (isConfirm) {
            if (isConfirm) {
                swal({
                    title: "Đang xử lý dữ liệu",
                    html: true,
                    showConfirmButton: false
                });
                $.ajax({
                    url: '@Url.Action("Delete", "Function")',
                    type: 'POST',
                    data: { id: val },
                    dataType: 'json',
                    success: function (result) {
                        if (result.Status == '2') {
                            swal.close();
                            window.location.href = window.location.href;
                        }
                        else {
                            swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                        }
                    },
                    error: function () {
                        swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                    }
                });
            } else {
                swal.close();
            }
        });
    }
</script>