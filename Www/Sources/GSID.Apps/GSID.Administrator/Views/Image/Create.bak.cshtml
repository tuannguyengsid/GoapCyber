@using MvcSiteMapProvider.Web.Html;
@using GSID.Model.MongodbModels;
@using GSID.Admin.ViewModels.MongoModels;
@using GSID.Admin.Helpers;
@model ImageCreateViewModel
@Html.MvcSiteMap().SiteMapPath("MyBreadscrum")
<div class="page-heading">
    <h1>@Html.MvcSiteMap().SiteMapTitle()</h1>
    <div class="options">
        <div class="btn-toolbar"></div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        @using (Html.BeginForm("Create", Request.RequestContext.RouteData.Values["controller"].ToString(), FormMethod.Post, new { @class = "form-horizontal row-border tabular-form ImageForm", enctype = "multipart/form-data" }))
        {
            var _hasAttrCheckbox = new Dictionary<string, object>{
                                                    { "class", "bootstrap-switch"},
                                                    {"data-size", "mini"},
                                                    {"data-on-text", "<i class='fa fa-check'></i>"},
                                                    {"data-on-color", "success"},
                                                    {"data-off-text", "<i class='fa fa-times'></i>"},
                                                    {"data-off-color", "danger"}
                                                };
            if (!RBACUser.HasPermission("RecycleBin", Request.RequestContext.RouteData.Values["controller"].ToString()))
            {
                _hasAttrCheckbox.Add("disabled", "disabled");
            }
            <div class="col-md-12">
                <div class="panel panel-default alt" data-widget='{"id" : "wiget1"}'>
                    <div class="panel-editbox" data-widget-controls=""></div>
                    <div class="panel-body">
                        <div class="row row-flex">
                            <div class="col-sm-6">
                                @Html.AntiForgeryToken()
                                <div class="">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div id="dZUploadProductCreate" class="dropzone">
                                                <div class="dz-default dz-message"><i class="fa fa-cloud-upload" aria-hidden="true"></i> <span>Kéo thả hoặc click vào để chọn tập tin</span></div>
                                            </div>
                                            <small>Giới hạn mỗi tập tin: 10Mb, với kích thước hình ảnh: 368px x 258px</small>
                                            <small>Số tập tin up tối đa: 10 tập tin/lần đăng</small>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <span class="field-validation-error" id="ProductItemFiles" style="display:none;"><span for="ProductItemFiles" generated="true" class="">Vui lòng chọn hình ảnh trước khi lưu.</span></span>
                            </div>

                            <div class="col-sm-6 tabular-border">
                                <div class="tab-container tab-default">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a href="#info" data-toggle="tab">Thông tin chung</a></li>
                                    </ul>
                                    <div class="tab-content">
                                        <div class="tab-pane active" id="info">
                                            <div class="form-group">
                                                <label class="col-sm-2 control-label">@Html.DisplayNameFor(m => m.ImageLibraryIds) <span class="required">(*)</span></label>
                                                <div class="col-sm-10 tabular-border">
                                                    @Html.DropDownListFor(model => model.ImageLibraryIds, new SelectList(Model.ImageLibraries, "Id", "NameVn"), "---Chọn thư viện---", new { @class = "form-control select2 select-placeholder", multiple = "multiple" })
                                                    @Html.ValidationMessageFor(model => model.IsDeleted)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-2 control-label">@Html.DisplayNameFor(m => m.IsDeleted) <span class="required">(*)</span></label>
                                                <div class="col-sm-2 tabular-border pt-1">
                                                    @Html.CheckBoxFor(m => m.IsDeleted, _hasAttrCheckbox)
                                                    @Html.ValidationMessageFor(model => model.IsDeleted)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel-footer">
                        <div class="row">
                            <div class="col-sm-8 col-sm-offset-2">
                                @Html.Button("<i class='fa fa-save'></i> Lưu", new { @class = "btn btn-primary", type = "submit" }).IfRole("Create", Request.RequestContext.RouteData.Values["controller"].ToString())
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <!-- .container-fluid -->
</div>

<!-- Begin Alert Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h2 class="modal-title">Thông báo</h2>
            </div>
            <div class="modal-body">
                <p>Hệ thống đã tạo mới thành công!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
            <input type="hidden" id="hdfid" />
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.End Alert Modal  -->
@Html.Hidden("SwalProductTitle", "")
@Html.Hidden("SwalProductText", "")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
    });
    $(function () {
        //Bootstrap Switch
        $('input.bootstrap-switch').bootstrapSwitch();
         //debugger;
        var token = $('input[name="__RequestVerificationToken"]').val();
        Dropzone.autoDiscover = false;
        var FormCreateUrlUpload = '@Url.Action("ItemSaveUploadFile", Request.RequestContext.RouteData.Values["controller"].ToString(), new { Id = ""})';
        var myDropzoneProductCreate = new Dropzone("#dZUploadProductCreate", {
            url: "/",
            headers: { "__RequestVerificationToken": token },
            maxFiles: 10,
            addRemoveLinks: true,
            maxFilesize: 10,
            acceptedFiles: "image/jpeg, image/jpg, image/png",
            autoProcessQueue: false,
            parallelUploads: 1,
            //dictDefaultMessage: "Kéo thả tập tin để đăng",
            dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tập tin",
            dictFallbackText: "Vui lòng sử dụng mẫu dự phòng bên dưới để tải lên các tệp của bạn như trong những ngày cũ.",
            dictFileTooBig: "Tập tin ({{filesize}}MiB) quá lớn. Kích thước lớn nhất của tập tin filesize: {{maxFilesize}}MiB.",
            dictInvalidFileType: "Bạn không thể đăng với loại tập tin này.",
            dictResponseError: "Server responded with {{statusCode}} code.",
            dictCancelUpload: "Đóng",
            dictCancelUploadConfirmation: "Bạn có chắc chắn muốn hủy đăng tập tin?",
            dictRemoveFile: "Xóa tập tin",
            dictRemoveFileConfirmation: null,
            dictMaxFilesExceeded: "Bạn không thể tải lên bất kỳ tệp nào khác.",
            init: function () {
                var myDropzoneProductCreate = this;
                this.on("processing", function (file) {
                    myDropzoneProductCreate.options.url = FormCreateUrlUpload;
                });

                this.on("success", function () {
                    myDropzoneProductCreate.options.autoProcessQueue = true;
                });

                this.on("queuecomplete", function () {
                    setTimeout(function () {
                        myDropzoneProductCreate.options.autoProcessQueue = false;
                        myDropzoneProductCreate.removeAllFiles(true);
                        //swal($('#SwalProductTitle').val(), $('#SwalProductText').val());
                        swal.close();
                        $('#myModal').modal();
                    }, 500);
                });
                this.on("complete", function (data) {
                    var res = JSON.parse(data.xhr.responseText);
                });

                $("form.ImageForm").submit(function (event) {
                    var validator = $(this).validate();
                    var anyError = false;
                    try {
                        form.find("input,select").each(function () {
                            if (!validator.element(this)) { // validate every input element inside this step
                                anyError = true;
                            }
                        });
                    } catch (e) {
                    }

                    if (myDropzoneProductCreate.files.length <= 0 && myDropzoneProductCreate.getAcceptedFiles().length <= 0) {
                        $('#ProductItemFiles').show();
                        anyError = true;
                    }
                    else {
                        $('#ProductItemFiles').hide();
                    }

                    if (anyError) {
                        return false; // exit if any error found
                    }
                    swal({
                        title: "Đang xử lý dữ liệu",
                        html: true,
                        showConfirmButton: false
                    });

                    var ImageLibraryIds = $('#ImageLibraryIds').val();

                    if (myDropzoneProductCreate.files.length > 0) {
                        FormCreateUrlUpload = '@Url.Action("ItemSaveUploadFile", Request.RequestContext.RouteData.Values["controller"].ToString())?id=' + ImageLibraryIds;
                        //$('#myModal .modal-header .modal-title').text(data.Title);
                        //$('#myModal .modal-body p').text(data.Message);
                        $('#myModal .modal-footer .btn-alert-submit').show();

                        myDropzoneProductCreate.processQueue();
                    }
                    event.preventDefault();
                });

            },
            success: function (file, response) {
                file.previewElement.classList.add("dz-success");
            },
            error: function (file, response) {
                file.previewElement.classList.add("dz-error");
                $(file.previewElement).find('.dz-error-message').text(response);
                console.log(response);
            }
        });

        $('form').ajaxForm({
            delegation: true,
            beforeSubmit: function (arr, form, options) {
                var validator = form.validate(); // obtain validator
                var anyError = false;
                try {
                    form.find("input,select").each(function () {
                        if (!validator.element(this)) { // validate every input element inside this step
                            anyError = true;
                        }
                    });
                } catch (e) {
                }
                if (anyError) {
                    return false; // exit if any error found
                }
                $('#bodymask').show();
            },
            success: function (data, statusText) {
                var idmodal = '#myModal';
                $(idmodal + ' .modal-header .modal-title').text(data.Title);
                $(idmodal + ' .modal-body p').text(data.Message);
                if (data.Status == '2') {
                    $(idmodal + ' .modal-footer .btn-alert-submit').show();
                    $("#hdfid").val(data.Id);
                    $.validator.unobtrusive.parse("form");
                }
                $(idmodal).modal();
                $('#bodymask').hide();
            },
            error: function (xhr, textStatus, errorThrown) {
                alert('Hệ thống gặp vấn đề. Xin vui lòng kiểm tra lại mạng Internet');
                console.log("in ajaxForm error");
                $('#bodymask').hide();
            },
            complete: function (xhr) {
                console.log("in ajaxForm complete");
                swal.close();
            }
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
    //~/Scripts/custom.js
        menuActive('@ViewBag.ActiveMenu');
    });
</script>