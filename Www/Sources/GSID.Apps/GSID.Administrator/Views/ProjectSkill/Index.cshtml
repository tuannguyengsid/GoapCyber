@using MvcSiteMapProvider.Web.Html;
@using GSID.Model.MongodbModels;
@using GSID.Model.ExtraEntities;
@using GSID.Admin.Helpers;
@using GSID.Admin.ViewModels.MongoModels;
@model ProjectSkillFilterViewModel
@Html.MvcSiteMap().SiteMapPath("MyBreadscrum")

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default alt" data-widget='{"id" : "wiget1"}'>
                <div class="panel-heading">
                    <h2>@Html.MvcSiteMap().SiteMapTitle()</h2>
                    <div class="panel-ctrls"
                         data-actions-container=""
                         data-action-collapse='{"target": ".panel-body"}'
                         data-action-refresh=''
                         data-action-close=''>
                        <div class="btn-group-p">
                            @Html.RawActionLink("<span class='btn-icon ion-plus-round'></span><span class='text'>Tạo mới<span>", "Create", Request.RequestContext.RouteData.Values["controller"].ToString(), null, new { @class = "btn btn-no-shadow btn-sm well well-sm tooltips", data_trigger = "hover", data_original_title = "Tạo mới" })
                            @Html.RawActionLink("<span class='btn-icon ion-trash-a'></span><span class='text'>Xóa<span>", null, null, null, new { @class = "btn btn-no-shadow btn-sm delete_all well well-sm tooltips", href = "javascript:;", data_trigger = "hover", data_original_title = "Xóa" }).IfRole("Delete", Request.RequestContext.RouteData.Values["controller"].ToString())
                            @Html.RawActionLink("<span class='btn-icon ion-android-search'></span><span class='text'>Tìm kiếm<span>", null, null, null, new { @class = "btn btn-no-shadow btn-sm btn-search well well-sm tooltips", href = "javascript:;", data_trigger = "hover", data_original_title = "Tìm kiếm" }).IfRole("Filter", Request.RequestContext.RouteData.Values["controller"].ToString())
                        </div>
                    </div>
                </div>
                <div class="panel-editbox" data-widget-controls=""></div>
                <div class="panel-body">
                    <div class="panel-ctrls">
                        <div class="col-sm-12">
                            <div class="panel-search-advance clearfix">
                                @using (Html.BeginForm("Filter", Request.RequestContext.RouteData.Values["controller"].ToString(), FormMethod.Get, new { @class = "form-horizontal row-border tabular-form Find", enctype = "multipart/form-data" }))
                                {
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group clearfix">
                                                <label class="col-sm-3 control-label">Từ khóa</label>
                                                <div class="col-sm-9 tabular-border">
                                                    @Html.TextBoxFor(model => model.Keyword, new { @class = "form-control", @placeholder = "Từ khóa" })
                                                </div>
                                            </div>
                                            <div class="form-group clearfix">
                                                <label class="col-sm-3 control-label">@Html.DisplayNameFor(m => m.BeginAddDateString)</label>
                                                <div class="col-sm-9 tabular-border">
                                                    <div class="input-daterange input-group">
                                                        @Html.TextBoxFor(model => model.BeginAddDateString, new { @class = "form-control datepicker-range", @placeholder = "dd/MM/yyyy", name = "start" })
                                                        <span class="input-group-addon">to</span>
                                                        @Html.TextBoxFor(model => model.EndAddDateString, new { @class = "form-control datepicker-range", @placeholder = "dd/MM/yyyy", name = "end" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="search-action">
                                        @Html.Button("<i class='fa fa-search'></i> Tra cứu", new { @class = "btn btn btn-sm", type = "submit" })
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div class="table-inner">
                        @{ Html.RenderAction("PartialIndex", Request.RequestContext.RouteData.Values["controller"].ToString(), new { area = "" }); }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- .container-fluid -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    //initializing
    $(function () {
        "use strict";
        menuActive('@ViewBag.ActiveMenu');

        $('.btn-search').click(function () {
            $('.panel-search-advance').slideToggle("slow");
        });
        $('form.Find').submit(function () {
            var options = {};
            options = {
                url: '@Url.Action("PartialIndex", Request.RequestContext.RouteData.Values["controller"].ToString())',
                type: 'GET',
                delegation: true,
                beforeSubmit: showRequest,  // pre-submit callback
                success: showResponseMonitor,  // post-submit callback
                error: function (xhr, textStatus, errorThrown) {
                    alert('Hệ thống gặp vấn đề. Xin vui lòng kiểm tra lại mạng Internet');
                    console.log("in ajaxForm error");
                    swal.close();
                },
                complete: function (xhr) {
                    console.log("in ajaxForm complete");
                    swal.close();
                    //status.html(xhr.responseText);
                }
            };
            // submit the form
            $(this).ajaxSubmit(options);
            // return false to prevent normal browser submit and page navigation
            return false;
        });
    });

    function onPagingList(page) {
        var formData = $('form.Find').serializeObject();
        addSerializeObject(formData, 'p', page);
        $.ajax({
            method: 'GET',
            url: '@Url.Action("PartialIndex", Request.RequestContext.RouteData.Values["controller"].ToString())',
            data: formData,
            dataType: 'html',
            success: function (data, status) {
                $('.table-inner').html(data);
            },
            error: function (error) {
                console.log('Error in sending ajax data');
            }
        });
    }

    // pre-submit callback
    function showRequest(arr, form, options) {
        var validator = form.validate(); // obtain validator
        var anyError = false;
        try {
            form.find("input,select").each(function () {
                if (!validator.element(this)) { // validate every input element inside this step
                    anyError = true;
                }
            });
        } catch (e) {
        }
        if (anyError) {
            return false; // exit if any error found
        }
        swal({
            title: "Đang xử lý dữ liệu",
            html: true,
            showConfirmButton: false
        });
    }

    // post-submit callback
    function showResponseMonitor(result, statusText, xhr) {
        $('.table-inner').html(result);
        swal.close();
    }

    function onDelete(val) {
        if (val.length > 0) {
            swal({
                title: 'Bạn đã chắc chứ?',
                text: "Bạn có chắc muốn xóa dữ liệu này không",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Xóa",
                cancelButtonText: "Đóng",
                closeOnConfirm: false,
                closeOnCancel: false
            },function (isConfirm) {
                if (isConfirm) {
                    swal({
                        title: "Đang xử lý dữ liệu",
                        html: true,
                        showConfirmButton: false
                    });
                    $.ajax({
                        url: '@Url.Action("Delete", Request.RequestContext.RouteData.Values["controller"].ToString())',
                        type: 'POST',
                        data: { id: val },
                        dataType: 'json',
                        success: function (result) {
                            swal.close();
                            if (result.Status == '2') {
                                onPagingList('1');
                            }
                            else {
                                swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                            }
                        },
                        error: function () {
                            swal("Lỗi", "Hệ thống gặp vấn đề", "error");
                        }
                    });
                }
                else {
                    swal.close();
                }
            });
        }
    }
</script>